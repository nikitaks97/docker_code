name: docker
# Trigger this workflow manually via GitHub UI
on: [workflow_dispatch]

jobs:
  docker_job:
    runs-on: ubuntu-latest

    # Run the entire job inside a Docker container using Node.js 20 on Alpine Linux
    container:
      image: node:20.3-alpine3.17
      env:
        URL: www.google.com  # Set environment variable inside container
      ports:
        - 80  # (Optional) Expose port 80 inside the container

    steps:
      # Step 1: Log the version of Node.js and OS details
      - name: Log Node & OS Versions
        run: |
          node -v
          cat /etc/os-release

      # Step 2: Print the value of the environment variable `URL`
      - name: Log Env
        run: echo $URL

      # Step 3: Create a text file inside the container filesystem
      - name: Create a file
        run: echo "some text" >> text.txt
      - name: list files
        run: ls -a

      # Step 4: Run a single container-based step (Node.js 18)
      # This is an *independent* container step, separate from the job container above.
      - name: Container in a Step
        uses: docker://node:18.16-alpine3.17
        with:
          entrypoint: /usr/local/bin/node  # Override entrypoint to run Node.js
          args: -p 2+3  # Pass JavaScript code to evaluate 2 + 3

      # Step 5: Try to read the previously created file using a new container
      # NOTE: This will **fail** unless you mount volumes or run inside same job container
      - name: Show file contents
        uses: docker://node:18.16-alpine3.17
        with:
          entrypoint: cat
          args: text.txt  # Try to read the file created earlier
  # both the step containers are sharing the same volume with the job container thats why the file created inside the job container can be accessed from the other two containers
      - uses: actions/checkout@v4
      - name: run a bash script
        uses: docker://node:18.16-alpine3.17
        with:
         entrypoint: ./script.sh
         args: "some string"

      - name: send a slack message
        uses: docker://node:18.16-alpine3.17
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_TITLE: From Github actions
          SLACK_MESSAGE: "Actor : ${{github.actor}}, Event : ${{github.event_name}}"
          SLACK_COLOR: "#723fc4"
         
       
